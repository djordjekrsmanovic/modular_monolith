version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    networks:
      - app-network

  backend:
    build:
      context: ./src/Booking
      dockerfile: Dockerfile
    container_name: backend-app
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '${BACKEND_PORT}:8080'
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build:
      context: ./src/Frontend/booking
      dockerfile: Dockerfile
    container_name: frontend-app
    environment:
      BACKEND_URL: http://localhost:${BACKEND_PORT}/
    ports:
      - '8080:80'
    networks:
      - app-network



networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
